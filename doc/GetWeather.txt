int Http_Get_wthrcdn(void)
{
  int i;
 HTTPClient http;
 String  errjson = "err_code";
   //设置请求头中的User-Agent
    http.begin("http://d1.weather.com.cn/weather_index/101110101.html"); 
    http.setUserAgent("Mozilla/5.0 (iPhone; CPU iPhone OS 11_0 like Mac OS X) AppleWebKit/604.1.38 (KHTML, like Gecko) Version/11.0 Mobile/15A372 Safari/604.1");
    http.addHeader("Referer", "http://www.weather.com.cn/");
  int httpCode = http.GET();
  // httpCode will be negative on error
  if (httpCode > 0) {
    if (httpCode == HTTP_CODE_OK) {
      String str= http.getString();
//      Serial.println(str);
      int indexStart = str.indexOf("dataSK =");
      int  indexEnd = str.indexOf(";var dataZS");
      String jsonDataSK = str.substring(indexStart+8,indexEnd);
      deserializeJson(docbuffer, jsonDataSK);   //反序列化json 
      JsonObject sk = docbuffer.as<JsonObject>();
      String city;
      city = sk["cityname"].as<String>();
      sprintf(epd_rtc_data.Weather_City, "%s", city.c_str());//所在城市
      epd_rtc_data.Weather_Tmp_Real = sk["temp"];
      const char *weatherdatas0 = sk["SD"];//String 换成const char * 解决format '%s' expects argument of type 'char*', but argument 3 has type 'String*' [-Wformat=] （20230601）
      sprintf(epd_rtc_data.Weather_hum, "%s", weatherdatas0);
      const char *weatherdatas1 = sk["time"];
      sprintf(epd_rtc_data.Weather_uptime, "%s", weatherdatas1);
      const char *weatherdatas2 = sk["limitnumber"];
      sprintf(epd_rtc_data.limitnumber, "%s", weatherdatas2);

      const char *real_weather_code = sk["weathercode"];//白天天气;
      int weather_code=atoi(&real_weather_code[1]);
        if(weather_code ==301) {weather_code = 8;}
        if(weather_code ==302) {weather_code = 15;}
        if(weather_code>31)    {weather_code = 32;}
      epd_rtc_data.Weather_TypeCode=wtr_code[weather_code];//转换成和风天气代码；
      const char *weatherdatas3 = sk["weather"];//汉字实时天气    
      sprintf(epd_rtc_data.Weather_Type, "%s", weatherdatas3);
      String Wind_data;//风力数据
      Wind_data = sk["WD"].as<String>() +  sk["WS"].as<String>();
      sprintf(epd_rtc_data.Weather_winddir, "%s", Wind_data.c_str() );

    indexStart = str.indexOf(";var dataZS ={\"zs\":");
    indexEnd = str.indexOf(",\"cn\":\"");
      String jsonSuggest = str.substring(indexStart+19,indexEnd);
     deserializeJson(docbuffer, jsonSuggest);   //反序列化json 
      JsonObject dataSuggestJson = docbuffer.as<JsonObject>();
      String fs_data;//防晒
      fs_data= dataSuggestJson["pp_name"].as<String>() + ":" + dataSuggestJson["pp_hint"].as<String>()+ "," +dataSuggestJson["pp_des_s"].as<String>();
      sprintf(epd_rtc_data.fs, "%s", fs_data.c_str());
      String ys_data;//带伞
      ys_data= dataSuggestJson["ys_name"].as<String>() + ":" + dataSuggestJson["ys_hint"].as<String>()+ "," +dataSuggestJson["ys_des_s"].as<String>();
      sprintf(epd_rtc_data.ys, "%s", ys_data.c_str());

       indexStart = str.indexOf("};var fc =");
       //indexEnd = str.indexOf("\"}]}");
      String payload = str.substring(indexStart+10);
//      Serial.println(payload);
       deserializeJson(docbuffer, payload);   //反序列化json 
       JsonObject root = docbuffer.as<JsonObject>();
//      Serial.printf("\r\ndeserial ok \r\n");

      if (root != 0)
      {
//        Serial.printf("\r\nroot is ok \r\n");
        int error_code = root[errjson];
//        Serial.printf("root get err code is %d\r\n", error_code);
        if (error_code == 0)   //无错误 输出
        {
      epd_rtc_data.Weather_Tmp_High = root["f"][0]["fc"];
      epd_rtc_data.Weather_Tmp_Low =  root["f"][0]["fd"];
            for(i=0;i<5;i++)//取取5天天气
            {
            const char *day = root["f"][i]["fa"];//白天天气;
              int dn=atoi(day);
              if(dn>31)
                  dn=32;//显示空
            epd_rtc_data.day_code[i][0] =wtr_code[dn];
//            Serial.printf("day_code=%d\r\n", dn );
   
            const char *night = root["f"][i]["fb"];//夜晚天气;
              int nn=atoi(night);
                 if(nn>31)
                  nn=32;//显示空
            epd_rtc_data.night_code[i][0] =wtr_code[nn];//字符串转数字
//            Serial.printf("night_code=%d\r\n", nn );

            if(epd_rtc_data.night_code[i][0] ==100)//晚上晴天转换成夜晚图标
            {
                epd_rtc_data.night_code[i][0] =150;
            }
             if(epd_rtc_data.night_code[i][0] ==104)//晚上阴天转换成夜晚图标
            {
                epd_rtc_data.night_code[i][0] =154;
            }
            const char *tmp_max = root["f"][i]["fc"];//最高温度
            epd_rtc_data.tmp_max_data[i][0] = atoi(tmp_max);
            const char *tmp_min = root["f"][i]["fd"];//最高低温度
            epd_rtc_data.tmp_min_data[i][0] = atoi(tmp_min);
            const char *date = root["f"][i]["fj"];
            sprintf(epd_rtc_data.Weather_data[i], "%s",date); 
            }   
        }
      }
      else
      {
//         Serial.printf("\r\n root is failed \r\n");
      }
    }
  } else {
//    Serial.printf("[HTTP] GET... failed, error: %s\n", http.errorToString(httpCode).c_str());
  }
   http.end();
  return 1;
}